schema {
  query: Root
  mutation: Mutation
}

interface Node {
  id: ID!
}


type AbilityList {
  abilities: [Ability]
}

input AddAbilityInput {
  name: String!
  description: String!
}

input CampaignViewInput {
  campaignId: String!
}

type Root {
  skills: [Skill]
  abilities: [Ability]
  campaigns: [CampaignListItem]
  campaignsWithCharactersAndScenes: [CampaignListItem]
  campaignView(campaignId: String!): Campaign
  getScene(campaignId: String!, sceneName: String!): Scene
}

type Ability {
  id: String!
  name: String
  description: String
  updated_at: String
  created_at: String
}


type Skill {
  id: String
  name: String
  description: String
}

input CreateCampaignInput {
  title: String!
  setting: String!
  desc: String!
}

type SceneSummary {
  name: String
  id: String
}

type Campaign {
  id: String
  title: String
  created_at: String
  updated_at: String
  desc: String
  setting: String
  areas_of_interest: [String]
  url_slug: String
  scenes: [Scene]
}

type CampaignListItem {
  id: String
  title: String
  created_at: String
  updated_at: String
  url_slug: String
  desc: String
  setting: String
  characters: [CharacterCampaignListItem]
}

type CharacterCampaignListItem {
  id: ID
  name: String
}

type CharacterConnection {
  edges: [CharacterEdge]
}

type CharacterEdge {
  cursor: ID!
  node: Character
}

type SceneConnection {
  edges: [SceneEdge]
  pageInfo: PageInfo!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type SceneEdge {
  cursor: String!
  node: Scene
}

input CreateSceneInput {
  name: String
  description: String
  campaign_id: String
}

input CreateCharacterInput {
  race: ID
  characterName: String
  characterClass: ID
}

type Mutation {
  addAbility(input: AddAbilityInput!): AbilityList
  createCampaign(input: CreateCampaignInput!): CreateCampaignPayload
  createScene(input: CreateSceneInput!): CreateScenePayload
  createCharacter(input: CreateCharacterInput!): CreateCharacterPayload
}

type CreateCharacterPayload {
  id: ID
  race_id: ID
  name: String
  character_class_id: ID
}

type CreateScenePayload {
  name: String
  description: String
  id: String
  created_at: String
  updated_at: String
  campaign_id: String
}

type Scene {
  name: String
  description: String
  id: String
  created_at: String
  updated_at: String
  campaign_id: String
}

type Character {
  id: ID
  name: String
  character_class_id: ID
  race_id: ID
}

type CharacterClass {
  id: ID
  name: String
}

type Race {
  id: ID
  name: String
}


type CreateCampaignPayload {
  id: String
  title: String
  created_at: String
  updated_at: String
  desc: String
  setting: String
  url_slug: String
}
